{"ast":null,"code":"var _jsxFileName = \"/Users/mytoy/Desktop/Client side/taskapp/client/src/components/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./TaskForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  onAddTask\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    onAddTask({\n      title,\n      description,\n      dueDate,\n      completed: false\n    });\n    setTitle(\"\");\n    setDescription(\"\");\n    setDueDate(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.dateInput,\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"LxNCPUUaVVDu01qONavFWoZZd9k=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","TaskForm","onAddTask","_s","title","setTitle","description","setDescription","dueDate","setDueDate","handleSubmit","e","preventDefault","trim","completed","onSubmit","className","form","children","input","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","dateInput","type","button","_c","$RefreshReg$"],"sources":["/Users/mytoy/Desktop/Client side/taskapp/client/src/components/TaskForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./TaskForm.module.css\";\n\nexport default function TaskForm({ onAddTask }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    onAddTask({ title, description, dueDate, completed: false });\n    setTitle(\"\");\n    setDescription(\"\");\n    setDueDate(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        className={styles.input}\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Task Title\"\n        required\n      />\n      <input\n        className={styles.input}\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder=\"Description\"\n      />\n      <input\n        className={styles.dateInput}\n        type=\"date\"\n        value={dueDate}\n        onChange={(e) => setDueDate(e.target.value)}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add Task\n      </button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC,CAAC,EAAE;IACnBX,SAAS,CAAC;MAAEE,KAAK;MAAEE,WAAW;MAAEE,OAAO;MAAEM,SAAS,EAAE;IAAM,CAAC,CAAC;IAC5DT,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACET,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAACM,SAAS,EAAElB,MAAM,CAACmB,IAAK;IAAAC,QAAA,gBACnDlB,OAAA;MACEgB,SAAS,EAAElB,MAAM,CAACqB,KAAM;MACxBC,KAAK,EAAEhB,KAAM;MACbiB,QAAQ,EAAGV,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,YAAY;MACxBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MACEgB,SAAS,EAAElB,MAAM,CAACqB,KAAM;MACxBC,KAAK,EAAEd,WAAY;MACnBe,QAAQ,EAAGV,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF5B,OAAA;MACEgB,SAAS,EAAElB,MAAM,CAAC+B,SAAU;MAC5BC,IAAI,EAAC,MAAM;MACXV,KAAK,EAAEZ,OAAQ;MACfa,QAAQ,EAAGV,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF5B,OAAA;MAAQgB,SAAS,EAAElB,MAAM,CAACiC,MAAO;MAACD,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAEhD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACzB,EAAA,CAxCuBF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}